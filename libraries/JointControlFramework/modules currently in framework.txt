Algorithms:
*Spd to Spd no feedback: For inputting speed and outputting speed without feedback. Open loop speed control.
PIAlgorithm: closed loop algorithm, using PI logic. Logic is generalized, PI constants are accepted through constructors.


Output Devices:
*DirectDiscreteHBridge: An h bridge made out of discrete components (not an IC), and the microcontroller lines directly
control it (no other devices in between them). Two inputs, N transistor 1 and N transistor 2. It's assumed the other 
two transistors will be P transistors so they don't need control lines to the microcontroller. 

*Sdc2130: A brushed DC motor controller, capable of being controlled via pwm or serial, and controlling the motor
based on speed, position, or torque with feedback capabilities. Unfortunatley, it kind of sucks. Best we got it working is to make it slightly increment position when we tell it to move. So the only set up movement is for the device to take in a speed value, look at the value and if it's greater than 0, slightly move it up, and if it's less than 0 slightly move it down.

*DynamixelController: Interfaces with either MX or AX dynamixel. They can operate a in Wheel, Joint, and Multi-rotation modes which take speed, position, and position respectively. 
Complicated. Interfaces with RoveDynamixel.h so you need to look at those functions to get a better understanding of how the functions work.


*DRV8388: H-Bridge IC that interfaces with a small DC brush motor. Controlled by a phase and enable pin, phase determines direction while enable is controlled by a pulsated PWM signal.

<<<<<<< HEAD
*VNH5019: H bridge IC for a small DC brush motor. Controlled by a pwm pin and two direction pins

=======
*DRV8842

*DRV8871
>>>>>>> refs/remotes/origin/Library_Module_dev

Feedback Devices:
Ma3Encoder12b: MA3 magnetic encoder, 12 bit pwm version. Communicates to us via pwm, 12 bit resolution of degrees over 360 degrees.
